@model PagedList.IPagedList<SharedModels.Models.DashBoard>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Dashboard";
}
<div class="container body-content">

    <h2>DashBoard</h2>
    <br />
    <div class="panel panel-success">
        <div class="panel-heading">Elementos Pesquisados Por Tag</div>
        <div class="panel-body">

            @using (Html.BeginForm())
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-2">Termo Pesquisado</label>
                        <div class="col-md-2">
                            @Html.TextBox("SearchString", null, new { @class = "form-control" })
                        </div>
                        <div class="col-md-8">
                            <input type="submit" value="Filtrar" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }

            <table class="table table-hover table-responsive">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().DescricaoTag)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().TermoPesquisado)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Quantidade)
                    </th>
                </tr>

                @foreach (var item in Model)
            {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.DescricaoTag)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TermoPesquisado)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantidade)
                        </td>
                    </tr>
                }
            </table>
            <div>
                @Html.PagedListPager(Model, page => Url.Action("DashBoard", new { page }))
            </div>

        </div>
    </div>

    <div class="panel panel-success">
        <div class="panel-heading">Pesquisas no mapa</div>
        <div class="panel-body">
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="control-label col-md-2">Data Inicial</label>
                    <div class="col-md-10">
                        <input type="text" class="form-control" data="true" name="DataInicialPontos" id="DataInicialPontos" value="" />
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Data Final</label>
                    <div class="col-md-10">
                        <input type="text" class="form-control" data="true" name="DataFinalPontos" id="DataFinalPontos" value="" />
                    </div>
                </div>
                <a onclick="CarregarPontos('@Url.Action("PointMaps","Pesquisas")')"><span class="btn btn-success">Pesquisar</span></a>
            </div>
            <br />
            <div id="mapa1" style="display:none"></div>

        </div>
    </div>

    <div class="panel panel-success">
        <div class="panel-heading">Mapa de Calor</div>
        <div class="panel-body">

            <div class="form-horizontal">
                <div class="form-group">
                    <label class="control-label col-md-2">Data Inicial</label>
                    <div class="col-md-10">
                        <input type="text" class="form-control" data="true" name="DataInicialCalor" id="DataInicialCalor" value="" />
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Data Final</label>
                    <div class="col-md-10">
                        <input type="text" class="form-control" data="true" name="DataFinalCalor" id="DataFinalCalor" value="" />
                    </div>
                </div>

                <a onclick="MapaCalor('@Url.Action("PointMaps","Pesquisas")')"><span class="btn btn-success">Pesquisar</span></a>

            </div>

            <div id="map2"></div>
        </div>
    </div>

</div>
<script>
    $(function () {
        $("input[data='true']").datepicker({
            calendarWeeks: false,
            todayHighlight: true,
            autoclose: true,
            format: "dd/mm/yyyy"
        });
    });

</script>

<script type="text/javascript" src="~/Scripts/mapacalor.js"></script>

<script type="text/javascript">

        var map = L.map('map2').setView([-14.235004, -51.92527999999999], 3.5);

    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpandmbXliNDBjZWd2M2x6bDk3c2ZtOTkifQ._QA7i5Mpkd_m30IGElHziw', {
        maxZoom: 18,
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
			'<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
			'Imagery © <a href="http://mapbox.com">Mapbox</a>',
        id: 'mapbox.light'
    }).addTo(map);


    // control that shows state info on hover
    var info = L.control();

    info.onAdd = function (map) {
        this._div = L.DomUtil.create('div', 'info');
        this.update();
        return this._div;
    };

    info.update = function (props) {
        this._div.innerHTML = '<h4>US Population Density</h4>' + (props ?
			'<b>' + props.name + '</b><br />' + props.density + ' people / mi<sup>2</sup>'
			: 'Hover over a state');
    };

    info.addTo(map);


    // get color depending on population density value
    function getColor(d) {
        return d > 1000 ? '#800026' :
				d > 500 ? '#BD0026' :
				d > 200 ? '#E31A1C' :
				d > 100 ? '#FC4E2A' :
				d > 50 ? '#FD8D3C' :
				d > 20 ? '#FEB24C' :
				d > 10 ? '#FED976' :
							'#FFEDA0';
    }

    function style(feature) {
        return {
            weight: 2,
            opacity: 1,
            color: 'white',
            dashArray: '3',
            fillOpacity: 0.7,
            fillColor: getColor(feature.properties.density)
        };
    }

    function highlightFeature(e) {
        var layer = e.target;

        layer.setStyle({
            weight: 5,
            color: '#666',
            dashArray: '',
            fillOpacity: 0.7
        });

        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
            layer.bringToFront();
        }

        info.update(layer.feature.properties);
    }

    var geojson;

    function resetHighlight(e) {
        geojson.resetStyle(e.target);
        info.update();
    }

    function zoomToFeature(e) {
        map.fitBounds(e.target.getBounds());
    }

    function onEachFeature(feature, layer) {
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: zoomToFeature
        });
    }

    geojson = L.geoJson(statesData, {
        style: style,
        onEachFeature: onEachFeature
    }).addTo(map);

    map.attributionControl.addAttribution('Population data &copy; <a href="http://census.gov/">US Census Bureau</a>');


    var legend = L.control({ position: 'bottomright' });

    legend.onAdd = function (map) {

        var div = L.DomUtil.create('div', 'info legend'),
			grades = [0, 10, 20, 50, 100, 200, 500, 1000],
			labels = [],
			from, to;

        for (var i = 0; i < grades.length; i++) {
            from = grades[i];
            to = grades[i + 1];

            labels.push(
				'<i style="background:' + getColor(from + 1) + '"></i> ' +
				from + (to ? '&ndash;' + to : '+'));
        }

        div.innerHTML = labels.join('<br>');
        return div;
    };

    legend.addTo(map);

</script>
